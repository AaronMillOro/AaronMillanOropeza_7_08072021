const express = require('express');
const helmet = require('helmet');
const nocache = require("nocache");
const dotenv = require('dotenv').config();
const path = require('path');
const Sequelize = require('sequelize');


// TODO import routes

// MySQL DB connection
const sequelize = new Sequelize(
  process.env.DATABASE, 
  process.env.USER, 
  process.env.PASSWORD, 
  { host: 'localhost', dialect: 'mysql'}
);

sequelize.authenticate()
  .then( () => { console.log('Connection has been established successfully.') })
  .catch(error => { console.error('Unable to connect to the database:', error) });


const app = express();

//  CORS (Cross Origin Resource Sharing) middleware
app.use((req, res, next) => {
  // Acess from any sort of origin
  res.setHeader('Access-Control-Allow-Origin', '*');
  // Add headers to the requests generated by the API
  res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');
  // Methods allowed in the API
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');
  next();
})


// Middleware able to access the client request by req.body
app.use(express.json());

// Security booster
app.use(helmet());

// Middleware to disable some cache from client by changing some HTTP headers
app.use(nocache());

// TODO Middleware to handle static images

// TODO API routes

module.exports = app;
