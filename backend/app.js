const express = require('express');
const helmet = require('helmet');
const nocache = require("nocache");
const path = require('path');

// TODO import routes
const db = require('./database/db_config');

// MySQL DB connection
db.sequelize.sync()
  .then( () => { console.log('Correct sync with database.') })
  .catch(error => { console.error('Problem with sync: ', error) });

// Server app
const app = express();

//  CORS (Cross Origin Resource Sharing) middleware
app.use((req, res, next) => {
  // Acess from any sort of origin
  res.setHeader('Access-Control-Allow-Origin', '*');
  // Add headers to the requests generated by the API
  res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');
  // Methods allowed in the API
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');
  next();
})

// Middleware able to access the client request by req.body
app.use(express.json());

// Security booster
app.use(helmet());

// Middleware to disable some cache from client by changing some HTTP headers
app.use(nocache());

// TODO Middleware to handle static images

// TODO API routes

module.exports = app;
